<%- include('./layouts/head.ejs') %>
<%- include('./layouts/header.ejs') %>

<body>
  <main class="admin-container">
    <div class="pedidos-admin">
      <h2 class="titulo-pedidos">Pedidos Recibidos</h2>

      <!-- Tabla de pedidos -->
      <table class="tabla-pedidos">
        <thead>
          <tr>
            <th>ID</th>
            <th>Fecha</th>
            <th>Cliente</th>
            <th>Estado</th>
            <th>Acciones</th>
          </tr>
        </thead>
        <tbody>
          <% if (pedidos.length > 0) { %>
            <% pedidos.forEach(pedido => { %>
              <tr>
                <td><%= pedido.id_pedido %></td>
                <td><%= pedido.fecha ? new Date(pedido.fecha).toLocaleDateString('es-AR') : '' %></td>
                <td><%= pedido.cliente %></td>
                <td><%= pedido.estado %></td>
                <td>
                    <button class="btn-preparar" data-carrito-id="<%= pedido.id_pedido %>">🛠 Ver Detalle</button>
                    <button onclick='prepararPedido("<%= pedido.id_pedido %>")'>📦 Preparar Pedido</button>
                    <button onclick='finalizarPedido("<%= pedido.id_pedido %>")'>✅ Finalizar</button>
                </td>
              </tr>
            <% }) %>
          <% } else { %>
            <tr><td colspan="6">No hay pedidos pendientes.</td></tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <!-- MODAL EMERGENTE -->
    <div id="modal-preparar" class="modal">
      <div class="modal-contenido">
        <span class="cerrar-modal" onclick="cerrarModal()">&times;</span>
        <h3>Orden de Venta</h3>

        <p><strong>Cliente:</strong> <span id="nombre-cliente"></span></p>
        <p><strong>Fecha:</strong> <span id="fecha-pedido"></span></p>

        <table class="tabla-detalle">
          <thead>
            <tr>
              <th>Código</th>
              <th>Producto</th>
              <th>Cantidad</th>
              <th>Precio Unitario</th>
              <th>Subtotal</th>
            </tr>
          </thead>
          <tbody id="detalle-productos">
            <!-- Se insertan con JS -->
          </tbody>
        </table>

        <p class="total-final">Total: <span id="total-final"></span></p>
      </div>
    </div>
  </main>

  <%- include('./layouts/footer.ejs') %>
  <script>
    window.addEventListener("DOMContentLoaded", () => {
      // Socket.io listener
      if (typeof io !== 'undefined') {
        if (!window.socket) {
          window.socket = io(); // evitar declarar dos veces
          socket.on("nuevoPedido", (data) => {
            Swal.fire({
              title: '📦 Nuevo pedido recibido',
              text: `Pedido #${data.id_pedido} fue marcado como "${data.estado}"`,
              icon: data.estado === "finalizado" ? 'success' : 'info',
              confirmButtonText: 'Ver pedidos',
              showCancelButton: true,
              cancelButtonText: 'Cerrar',
              timer: 7000,
              timerProgressBar: true
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = '/pedidos';
              }
            });
          });
        }
      } else {
        console.warn("❌ Socket.IO no está disponible");
      }
  
      // Modal detalle
      function cerrarModal() {
        document.getElementById("modal-preparar").style.display = "none";
      }
  
      window.cerrarModal = cerrarModal;
  
      document.querySelectorAll('.btn-preparar').forEach(btn => {
        btn.addEventListener('click', async () => {
          const carritoId = btn.dataset.carritoId;
          try {
            const response = await fetch(`/pedidos/${carritoId}/detalle`);
            const data = await response.json();
  
            const cuerpoTabla = document.querySelector('#detalle-productos');
            const nombreCliente = document.getElementById('nombre-cliente');
            const fechaPedido = document.getElementById('fecha-pedido');
            const totalFinal = document.getElementById('total-final');
  
            cuerpoTabla.innerHTML = '';
            nombreCliente.textContent = data.cliente;
            fechaPedido.textContent = data.fecha;
            totalFinal.textContent = `$${Number(data.total).toLocaleString('es-AR')}`;
  
            data.productos.forEach(producto => {
              const fila = document.createElement('tr');
              fila.innerHTML = `
                <td>${producto.codigo}</td>
                <td>${producto.nombre}</td>
                <td>${producto.cantidad}</td>
                <td>$${Number(producto.precio_unitario).toLocaleString('es-AR')}</td>
                <td>$${Number(producto.subtotal).toLocaleString('es-AR')}</td>
              `;
              cuerpoTabla.appendChild(fila);
            });
  
            document.getElementById("modal-preparar").style.display = "block";
          } catch (err) {
            console.error('❌ Error al obtener detalle del pedido:', err);
            Swal.fire('Error', 'Hubo un problema al cargar los datos del pedido.', 'error');
          }
        });
      });
  
      // Funciones globales
      window.prepararPedido = function(id) {
        fetch(`/pedidos/marcar-preparado/${id}`, { method: 'POST' })
          .then(res => res.json())
          .then(data => {
            Swal.fire('Preparación iniciada', data.mensaje, 'info');
            const ventanaPDF = window.open(`/pedidos/${id}/pdf-preparacion`, '_blank');
            if (ventanaPDF) {
              ventanaPDF.onload = () => ventanaPDF.print();
            }
            setTimeout(() => location.reload(), 2500);
          })
          .catch(err => {
            console.error('❌ Error al preparar pedido:', err);
            Swal.fire('Error', 'No se pudo marcar como en preparación.', 'error');
          });
      }
  
      window.finalizarPedido = function(id) {
        fetch(`/pedidos/finalizar/${id}`, { method: 'POST' })
          .then(res => res.json())
          .then(data => {
            Swal.fire('Pedido Finalizado', data.mensaje, 'success');
            setTimeout(() => location.reload(), 1500);
          })
          .catch(err => {
            console.error(err);
            Swal.fire('Error', 'No se pudo finalizar el pedido.', 'error');
          });
      }
    });
  </script>
  
</body>
