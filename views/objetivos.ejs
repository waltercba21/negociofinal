<%- include('./layouts/head.ejs') %>
<%- include('./layouts/header.ejs') %>

<body>
  <main style="padding:16px;">
    <h2>Objetivos — Compras (básico funcional)</h2>

    <!-- ===== Filtros ===== -->
    <section>
      <!-- 1) Periodo -->
      <div>
        <label>Tipo:
  <select id="tipo">
    <option value="TOTAL">AMBOS (A + B)</option>
    <option value="A">A (Facturas)</option>
    <option value="B">B (Presupuestos)</option>
  </select>
</label>
      </div>

      <!-- 2) Contenedor de subfiltros (se muestra según periodo) -->
      <div id="subfiltros" style="display:none; margin-top:10px;">
        <!-- Semanal -->
        <div id="boxSemanal" style="display:none;">
          <label>Año:
            <select id="anSem"></select>
          </label>
          <label style="margin-left:8px;">Mes:
            <select id="mesSem"></select>
          </label>
          <label style="margin-left:8px;">Semana:
            <select id="semanaMes">
              <!-- Semana 1..5 (1–7, 8–14, 15–21, 22–28, 29–fin) -->
              <option value="1">Semana 1 (1–7)</option>
              <option value="2">Semana 2 (8–14)</option>
              <option value="3">Semana 3 (15–21)</option>
              <option value="4">Semana 4 (22–28)</option>
              <option value="5">Semana 5 (29–fin)</option>
            </select>
          </label>
        </div>

        <!-- Mensual -->
        <div id="boxMensual" style="display:none;">
          <label>Año:
            <select id="anMen"></select>
          </label>
          <label style="margin-left:8px;">Mes:
            <select id="mesMen"></select>
          </label>
        </div>

        <!-- Anual -->
        <div id="boxAnual" style="display:none;">
          <label>Año:
            <select id="anAnu"></select>
          </label>
        </div>

        <!-- Tipo A/B (se muestra en todos los casos) -->
        <div style="margin-top:8px;">
          <label>Tipo:
            <select id="tipo">
              <option value="A">A (Facturas)</option>
              <option value="B">B (Presupuestos)</option>
            </select>
          </label>
        </div>

        <!-- Botón Buscar -->
        <div style="margin-top:10px;">
          <button id="btnBuscar">Buscar</button>
        </div>
      </div>
    </section>

    <hr style="margin:16px 0;">

    <!-- ===== Estado / mensajes ===== -->
    <div id="estado">Seleccione un periodo para comenzar…</div>
    <div id="error" style="color:red; display:none;"></div>

    <hr style="margin:16px 0;">

    <!-- ===== KPIs mínimos ===== -->
    <section id="resultados" style="display:none;">
      <h3>Resultados</h3>
      <p><strong>Rango:</strong> <span id="lblRango">-</span> — <strong>Tipo:</strong> <span id="lblTipo">-</span></p>
      <p><strong>Total del periodo:</strong> <span id="kpiTotal">0</span></p>
      <p>
        <strong>Detalle totales:</strong>
        A (Facturas): <span id="totA">0</span> ·
        B (Presupuestos): <span id="totB">0</span> ·
        TOTAL: <span id="totTotal">0</span>
      </p>
    </section>

    <hr style="margin:16px 0;">

    <!-- ===== Tabla (solo serie seleccionada) ===== -->
    <section id="tablaWrap" style="display:none;">
      <h3>Serie seleccionada</h3>
      <table id="tablaSeries" border="1" cellpadding="6" cellspacing="0">
        <thead>
          <tr>
            <th>Etiqueta</th>
            <th>Serie (según Tipo)</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </section>
  </main>

<script>
  // ====== Helpers de fechas ======
  function pad(n){ return String(n).padStart(2,'0'); }
  function lastDayOfMonth(year, month1to12){ return new Date(year, month1to12, 0).getDate(); }
  function weekRangeOfMonth(year, month1to12, weekIndex1to5){
    const startDay = (weekIndex1to5 - 1) * 7 + 1;
    const endDay   = Math.min(weekIndex1to5 * 7, lastDayOfMonth(year, month1to12));
    const desde = `${year}-${pad(month1to12)}-${pad(startDay)}`;
    const hasta = `${year}-${pad(month1to12)}-${pad(endDay)}`;
    return { desde, hasta, label: `Semana ${weekIndex1to5} (${desde} → ${hasta})` };
  }
  function monthRange(year, month1to12){
    const desde = `${year}-${pad(month1to12)}-01`;
    const hasta = `${year}-${pad(month1to12)}-${pad(lastDayOfMonth(year, month1to12))}`;
    return { desde, hasta, label: `${year}-${pad(month1to12)}` };
  }
  function yearRange(year){ return { desde: `${year}-01-01`, hasta: `${year}-12-31`, label: `${year}` }; }
  function money(n){ return Number(n || 0).toLocaleString('es-AR',{style:'currency',currency:'ARS',maximumFractionDigits:0}); }

  // ====== DOM ======
  const $periodo    = document.getElementById('periodo');
  const $subfiltros = document.getElementById('subfiltros');
  // semanal
  const $boxSem     = document.getElementById('boxSemanal');
  const $anSem      = document.getElementById('anSem');
  const $mesSem     = document.getElementById('mesSem');
  const $semanaMes  = document.getElementById('semanaMes');
  // mensual
  const $boxMen     = document.getElementById('boxMensual');
  const $anMen      = document.getElementById('anMen');
  const $mesMen     = document.getElementById('mesMen');
  // anual
  const $boxAnu     = document.getElementById('boxAnual');
  const $anAnu      = document.getElementById('anAnu');

  const $tipo       = document.getElementById('tipo');
  const $btnBuscar  = document.getElementById('btnBuscar');

  const $estado     = document.getElementById('estado');
  const $error      = document.getElementById('error');

  const $resultados = document.getElementById('resultados');
  const $lblRango   = document.getElementById('lblRango');
  const $lblTipo    = document.getElementById('lblTipo');
  const $kpiTotal   = document.getElementById('kpiTotal');

  // Wrappers de totales (para mostrar/ocultar sin afectar el resto)
  const $wrapA      = document.getElementById('wrapA');
  const $wrapB      = document.getElementById('wrapB');
  const $wrapTOTAL  = document.getElementById('wrapTOTAL');
  const $totA       = document.getElementById('totA');
  const $totB       = document.getElementById('totB');
  const $totTotal   = document.getElementById('totTotal');

  const $tablaWrap  = document.getElementById('tablaWrap');
  const $tablaBody  = document.querySelector('#tablaSeries tbody');

  // ====== Relleno selects ======
  (function fillYearMonth(){
    const now = new Date();
    const thisYear = now.getFullYear();
    const years = [];
    for(let y=thisYear; y>=thisYear-6; y--) years.push(y);

    [$anSem,$anMen,$anAnu].forEach(sel=>{
      sel.innerHTML = years.map(y=>`<option value="${y}">${y}</option>`).join('');
    });

    const meses = Array.from({length:12}, (_,i)=>i+1);
    [$mesSem,$mesMen].forEach(sel=>{
      sel.innerHTML = meses.map(m=>`<option value="${m}">${pad(m)}</option>`).join('');
    });

    $anSem.value = thisYear; $anMen.value = thisYear; $anAnu.value = thisYear;
    $mesSem.value = now.getMonth()+1; $mesMen.value = now.getMonth()+1;
  })();

  // ====== Mostrar/ocultar subfiltros ======
  function onPeriodoChange(){
    const p = $periodo.value;

    // Nunca ocultamos el select de periodo: solo subfiltros.
    $subfiltros.style.display = 'none';
    $boxSem.style.display = 'none';
    $boxMen.style.display = 'none';
    $boxAnu.style.display = 'none';

    if(!p){ $estado.textContent='Seleccione un periodo para comenzar…'; return; }

    $subfiltros.style.display = '';
    if (p === 'semanal') $boxSem.style.display = '';
    if (p === 'mensual') $boxMen.style.display = '';
    if (p === 'anual')   $boxAnu.style.display = '';

    $estado.textContent = 'Complete los campos y presione Buscar.';
  }
  $periodo.addEventListener('change', onPeriodoChange);

  // Si eligen tipo primero, no pasa nada (pero no debe romper el periodo):
  $tipo.addEventListener('change', () => {
    // Solo aseguramos que el estado no tape la UI
    if (!$periodo.value) {
      $estado.textContent = 'Elegí un periodo (semanal, mensual o anual).';
    }
  });

  // ====== Buscar ======
  async function buscar(){
    $error.style.display='none'; $error.textContent='';
    $resultados.style.display='none'; $tablaWrap.style.display='none';
    $estado.textContent='Buscando…';

    const periodo = $periodo.value;
    if(!periodo){ $estado.textContent='Seleccione un periodo.'; return; }

    // desde / hasta
    let desde='', hasta='', labelRango='';
    if (periodo === 'semanal') {
      const r = weekRangeOfMonth(parseInt($anSem.value,10), parseInt($mesSem.value,10), parseInt($semanaMes.value,10));
      desde = r.desde; hasta = r.hasta; labelRango = r.label;
    } else if (periodo === 'mensual') {
      const r = monthRange(parseInt($anMen.value,10), parseInt($mesMen.value,10));
      desde = r.desde; hasta = r.hasta; labelRango = r.label;
    } else if (periodo === 'anual') {
      const r = yearRange(parseInt($anAnu.value,10));
      desde = r.desde; hasta = r.hasta; labelRango = r.label;
    }

    const tipo = $tipo.value; // 'A' | 'B' | 'TOTAL'

    try{
      const qs = new URLSearchParams({ periodo, tipo, desde, hasta }).toString();
      const res = await fetch(`/administracion/api/objetivos-compras?${qs}`);
      const data = await res.json();
      if(!res.ok || !data.ok) throw new Error(data.error || 'Error al calcular series.');

      // Cabecera
      $lblRango.textContent = labelRango;
      $lblTipo.textContent  = (tipo === 'TOTAL' ? 'AMBOS' : tipo);

      // Siempre resetear visibilidad de los wrappers de totales
      $wrapA.style.display = '';
      $wrapB.style.display = '';
      $wrapTOTAL.style.display = '';

      // KPIs y detalle, según tipo
      if (tipo === 'A') {
        $kpiTotal.textContent = money(data.totales.A);
        $totA.textContent     = money(data.totales.A);
        $wrapB.style.display  = 'none';
        $wrapTOTAL.style.display = 'none';
      } else if (tipo === 'B') {
        $kpiTotal.textContent = money(data.totales.B);
        $totB.textContent     = money(data.totales.B);
        $wrapA.style.display  = 'none';
        $wrapTOTAL.style.display = 'none';
      } else { // AMBOS
        $kpiTotal.textContent = money(data.totales.TOTAL);
        $totA.textContent     = money(data.totales.A);
        $totB.textContent     = money(data.totales.B);
        $totTotal.textContent = money(data.totales.TOTAL);
      }

      // Tabla — SOLO serie del tipo seleccionado (o TOTAL si AMBOS)
      const labels = data.series.labels || [];
      const serie = (tipo === 'A') ? (data.series.A||[])
                  : (tipo === 'B') ? (data.series.B||[])
                  : (data.series.TOTAL||[]);
      $tablaBody.innerHTML = '';
      for (let i=0; i<labels.length; i++){
        const tr = document.createElement('tr');
        const td1= document.createElement('td'); td1.textContent = labels[i] ?? '';
        const td2= document.createElement('td'); td2.textContent = money(serie[i] ?? 0);
        tr.appendChild(td1); tr.appendChild(td2);
        $tablaBody.appendChild(tr);
      }

      $resultados.style.display = '';
      $tablaWrap.style.display  = '';
      $estado.textContent = `Listo (${labels.length} fila(s)).`;
    }catch(e){
      console.error(e);
      $estado.textContent='Error.';
      $error.textContent = `❌ ${e.message}`;
      $error.style.display='block';
    }
  }
  $btnBuscar.addEventListener('click', buscar);

  // Inicio: dejamos todo utilizable, el select de periodo siempre visible
  onPeriodoChange();
</script>



  <%- include('./layouts/footer.ejs') %>
</body>
