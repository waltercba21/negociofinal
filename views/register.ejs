<%- include ./layouts/head.ejs %>
<%- include ./layouts/header.ejs %>
<html>
<body>
<main>
   <div class="register-form">
    
    <h2>Registrate</h2>

    <form action="./register" method="post" class="formulario-register" autocomplete="off" onsubmit="return validarFormulario()">

      <label for="nombre">Nombre Completo</label>
      <input type="text" name="nombre" value="<%= locals.oldData ? oldData.nombre : '' %>">
      
      <label for="apellido">Apellido</label>
      <input type="text" name="apellido" value="<%= locals.oldData ? oldData.apellido : '' %>">
      
      <label for="email">Email</label>
      <input type="text" name="email" value="<%= locals.oldData ? oldData.email : '' %>">
      
      <label for="password">Contraseña</label>
      <div class="password-container">
        <input type="password" name="password" value="" id="password-input" required>
        <i id="eye-icon" class="fas fa-eye"></i>
      </div>
      
      <!-- Mensaje explicativo debajo del campo de contraseña -->
      <small id="password-tooltip" style="display:none; color: gray;">La contraseña debe tener al menos 8 caracteres, 1 mayúscula y 1 número.</small>
    
      <label for="provincia">Provincia</label>
<select id="provincia" name="provincia" required>
  <option value="">Selecciona una provincia</option>
</select>

<label for="localidad">Localidad</label>
<select id="localidad" name="localidad" required>
  <option value="">Selecciona una localidad</option>
</select>

      <label for="confirmar_password">Confirmar Contraseña</label>
      <input type="password" name="confirmar_password">
    
      <label for="telefono">Teléfono</label>
      <input type="text" name="celular" value="<%= locals.oldData ? oldData.celular : '' %>">
    
      <label for="direccion">Dirección</label>
      <input type="text" name="direccion" value="<%= locals.oldData ? oldData.direccion : '' %>">
    
      <label for="fecha_nacimiento">Fecha de Nacimiento</label>
      <input type="date" name="fecha_nacimiento" value="<%= locals.oldData ? oldData.fecha_nacimiento : '' %>">
      
      <label for="acepto_terminos">
        <input type="checkbox" name="acepto_terminos" <%= locals.oldData && oldData.acepto_terminos ? 'checked' : '' %> required>
        Acepto los <a href="/terminos" target="_blank">términos y condiciones</a>
      </label>
    
      <div class="btn-guardar">
        <input type="submit" value="Guardar" class="btn-register">
        <a href="/" class="btn-cancel">Cancelar</a>
      </div>
    
    </form>
    
  </div>
</main>

<%- include ./layouts/footer.ejs %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<script>
// Cargar provincias desde la API al cargar la página
async function cargarProvincias() {
  try {
    const response = await fetch('https://apis.datos.gob.ar/georef/api/provincias');
    const data = await response.json();
    const provincias = data.provincias;
    const provinciaSelect = document.getElementById('provincia');
    
    // Ordenar alfabéticamente y agregar las provincias al select
    provincias.sort((a, b) => a.nombre.localeCompare(b.nombre));
    
    provincias.forEach(provincia => {
      const option = document.createElement('option');
      option.value = provincia.id;
      option.textContent = provincia.nombre;
      provinciaSelect.appendChild(option);
    });
  } catch (error) {
    console.error('Error al cargar provincias:', error);
  }
}

// Cargar localidades de la provincia seleccionada
async function cargarLocalidades() {
  const provinciaId = document.getElementById('provincia').value;
  const localidadSelect = document.getElementById('localidad');

  console.log('provinciaId:', provinciaId);  // Imprime el valor de provinciaId

  if (provinciaId) {
    try {
      // Modificar la URL para incluir un número máximo válido de localidades
      const response = await fetch(`https://apis.datos.gob.ar/georef/api/localidades?provincia=${provinciaId}&max=5000`);
      const data = await response.json();
      
      console.log('Respuesta de localidades:', data);  // Verifica la respuesta de la API

      if (data.errores) {
        console.error('Error en la respuesta de la API:', data.errores);
        return;
      }

      const localidades = data.localidades || [];

      // Limpiar las opciones de localidad
      localidadSelect.innerHTML = '<option value="">Selecciona una localidad</option>';

      // Verificar si hay localidades
      if (localidades.length > 0) {
        // Ordenar alfabéticamente y agregar las localidades al select
        localidades.sort((a, b) => a.nombre.localeCompare(b.nombre));

        localidades.forEach(localidad => {
          const option = document.createElement('option');
          option.value = localidad.id;
          option.textContent = localidad.nombre;
          localidadSelect.appendChild(option);
        });
      } else {
        // Mensaje en caso de no haber localidades
        const option = document.createElement('option');
        option.value = '';
        option.textContent = 'No hay localidades disponibles';
        localidadSelect.appendChild(option);
      }
    } catch (error) {
      console.error('Error al cargar localidades:', error);
    }
  } else {
    // Limpiar las opciones si no se selecciona provincia
    localidadSelect.innerHTML = '<option value="">Selecciona una localidad</option>';
  }
}

// Llamar a cargar provincias al cargar la página
window.onload = cargarProvincias;

function validarFormulario() {
  // Obtener los valores de los campos
  const nombre = document.querySelector('input[name="nombre"]').value;
  const apellido = document.querySelector('input[name="apellido"]').value;
  const email = document.querySelector('input[name="email"]').value;
  const password = document.querySelector('input[name="password"]').value;
  const confirmarPassword = document.querySelector('input[name="confirmar_password"]').value;
  const celular = document.querySelector('input[name="celular"]').value;
  const direccion = document.querySelector('input[name="direccion"]').value;
  const fechaNacimiento = document.querySelector('input[name="fecha_nacimiento"]').value;
  const aceptoTerminos = document.querySelector('input[name="acepto_terminos"]').checked;

  // Validación de campos vacíos
  if (!nombre) {
    Swal.fire({
      icon: 'error',
      title: '¡Campo vacío!',
      text: 'Por favor, ingresa tu nombre completo.',
    });
    return false;
  }
  if (!apellido) {
    Swal.fire({
      icon: 'error',
      title: '¡Campo vacío!',
      text: 'Por favor, ingresa tu apellido.',
    });
    return false;
  }
  if (!email) {
    Swal.fire({
      icon: 'error',
      title: '¡Campo vacío!',
      text: 'Por favor, ingresa tu correo electrónico.',
    });
    return false;
  }
  if (!password) {
    Swal.fire({
      icon: 'error',
      title: '¡Campo vacío!',
      text: 'Por favor, ingresa una contraseña.',
    });
    return false;
  }
  if (!confirmarPassword) {
    Swal.fire({
      icon: 'error',
      title: '¡Campo vacío!',
      text: 'Por favor, confirma tu contraseña.',
    });
    return false;
  }
  if (!celular) {
    Swal.fire({
      icon: 'error',
      title: '¡Campo vacío!',
      text: 'Por favor, ingresa tu número de teléfono.',
    });
    return false;
  }
  if (!direccion) {
    Swal.fire({
      icon: 'error',
      title: '¡Campo vacío!',
      text: 'Por favor, ingresa tu dirección.',
    });
    return false;
  }
  if (!fechaNacimiento) {
    Swal.fire({
      icon: 'error',
      title: '¡Campo vacío!',
      text: 'Por favor, ingresa tu fecha de nacimiento.',
    });
    return false;
  }
  if (!aceptoTerminos) {
    Swal.fire({
      icon: 'error',
      title: '¡Falta aceptar los términos!',
      text: 'Debes aceptar los términos y condiciones para continuar.',
    });
    return false;
  }

  // Validación de la contraseña (debe tener al menos 8 caracteres, 1 mayúscula y 1 número)
  const passwordRegex = /^(?=.*[A-Z])(?=.*\d).{8,}$/;
  if (!passwordRegex.test(password)) {
    Swal.fire({
      icon: 'error',
      title: 'Contraseña no válida',
      text: 'La contraseña debe tener al menos 8 caracteres, una mayúscula y un número.',
    });
    return false;
  }

  // Verificar que las contraseñas coincidan
  if (password !== confirmarPassword) {
    Swal.fire({
      icon: 'error',
      title: 'Las contraseñas no coinciden',
      text: 'Las contraseñas que has ingresado no coinciden. Por favor, verifica.',
    });
    return false;
  }

  // Si todas las validaciones pasaron, el formulario se envía
  return true;
}
document.addEventListener('DOMContentLoaded', function() {
  // Mostrar el mensaje explicativo cuando el usuario hace clic en el campo de contraseña
  const passwordInput = document.querySelector('input[name="password"]');
  const passwordTooltip = document.querySelector('#password-tooltip');

  passwordInput.addEventListener('focus', function() {
    passwordTooltip.style.display = 'block'; // Mostrar el mensaje explicativo
  });

  passwordInput.addEventListener('blur', function() {
    passwordTooltip.style.display = 'none'; // Ocultar el mensaje cuando el campo pierde el foco
  });

  // Funcionalidad de mostrar/ocultar la contraseña
  const eyeIcon = document.querySelector('#eye-icon');
  const passwordField = document.querySelector('input[name="password"]');

  eyeIcon.addEventListener('click', function() {
    if (passwordField.type === 'password') {
      passwordField.type = 'text';  // Mostrar la contraseña
      eyeIcon.classList.remove('fa-eye'); // Cambiar icono a "ojo abierto"
      eyeIcon.classList.add('fa-eye-slash');
    } else {
      passwordField.type = 'password';  // Ocultar la contraseña
      eyeIcon.classList.remove('fa-eye-slash');
      eyeIcon.classList.add('fa-eye'); // Cambiar icono a "ojo cerrado"
    }
  });
});
</script>

</body>
</html>
